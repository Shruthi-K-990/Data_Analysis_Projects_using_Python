#By analyzing customer lifetime value, companies can identify the most effective marketing channels and
# campaigns for acquiring high-value customers,
# as well as develop targeted retention strategies to keep those customers engaged and loyal.

import pandas as pd
import plotly.io as pio
import plotly.express as px
pio.templates.default = 'plotly_white'

data = pd.read_csv('D:/Python Projects/Shruthi/customer_acquisition_data.csv')
print(data.head())

#visualizing the distribution of acquisition cost and revenue generated by the customer using histograms
fig = px.histogram(data,x='cost',nbins=20,title='Distribution of Acquisition Cost')
fig.show()
fig1 = px.histogram(data,x='revenue',nbins=20,title='Distribution of Revenue')
fig1.show()
conversion_by_channel = data.groupby('channel')['conversion_rate'].mean().reset_index()

#Conversion Rate by Channel
fig2 = px.bar(conversion_by_channel, x='channel',y='conversion_rate',title='Conversion Rate by Channel')
fig2.show()
revenue_by_channel = data.groupby('channel')['revenue'].sum().reset_index()

fig3 = px.pie(revenue_by_channel, values='revenue',
             names='channel',
             title='Total Revenue by Channel',
             hole=0.6, color_discrete_sequence=px.colors.qualitative.Pastel)
fig3.show()
#calculate the return on investment (ROI) for each channel
data['roi'] = data['revenue'] / data['cost']
roi_by_channel = data.groupby('channel')['roi'].mean().reset_index()

fig4 = px.bar(roi_by_channel,
             x='channel',
             y='roi', title='Return on Investment (ROI) by Channel')
fig4.show()
#CLTV = (revenue â€“ cost) * conversion_rate / cost
data['cltv'] = (data['revenue'] - data['cost']) * data['conversion_rate'] / data['cost']

channel_cltv = data.groupby('channel')['cltv'].mean().reset_index()

fig5 = px.bar(channel_cltv, x='channel', y='cltv', color='channel',title='Customer Lifetime Value by Channel')

fig5.update_xaxes(title='Channel')
fig5.update_yaxes(title='CLTV')
fig5.show()

#compare the CLTV distributions of the social media and referral channels
subset = data.loc[data['channel'].isin(['social media', 'referral'])]

fig6 = px.box(subset, x='channel', y='cltv', title='CLTV Distribution by Channel')

fig6.update_xaxes(title='Channel')
fig6.update_yaxes(title='CLTV')
fig6.update_layout(legend_title='Channel')
fig6.show()
